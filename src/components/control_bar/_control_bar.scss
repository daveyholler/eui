.euiControlBar {
  background: lighten($euiColorInk, 5%);
  width: 100%;
  color: $controlBarText;
  display: flex;
  flex-direction: column;
  position: fixed;
  // This large box shadow helps prevent a flicker of dark
  // background when the content is shown and hidden
  box-shadow: inset 0 $controlBarInitialHeight 0 $controlBarBackground, inset 0 600rem 0 $euiColorLightestShade;
  z-index: 20000;
  left: 0;
  bottom: 0;
  transform: translateY(0);
  box-sizing: border-box;

  &.euiControlBar--navCollapsed {
    left: $euiNavDrawerWidthCollapsed;
    width: calc(100% - #{$euiNavDrawerWidthCollapsed});
  }

  &.euiControlBar--navExpanded {
    left: $euiNavDrawerWidthExpanded;
    width: calc(100% - #{$euiNavDrawerWidthExpanded});
  }

  &.euiControlBar--open {
    animation-duration: $euiAnimSpeedNormal;
    animation-timing-function: $euiAnimSlightResistance;
    animation-fill-mode: forwards;
  }

  &.euiControlBar--open.euiControlBar--large {
    animation-name: openPanelLarge;
    height: calc(100vh - 5rem);
    bottom: -100vh;
  }

  &.euiControlBar--open.euiControlBar--medium {
    animation-name: openPanelMedium;
    height: 50vh;
    bottom: -50vh;
  }

  &.euiControlBar--open.euiControlBar--small {
    animation-name: openPanelMedium;
    height: 25vh;
    bottom: -25vh;
  }

  &.euiControlBar--large {
    height: $controlBarInitialHeight;
  }

  &.euiControlBar--medium {
    height: $controlBarInitialHeight;
  }

  &.euiControlBar--small {
    height: $controlBarInitialHeight;
  }
}

.euiControlBar__controls {
  height: $controlBarInitialHeight;
  width: 100%;
  display: flex;
  align-items: center;
}

.euiControlBar__content {
  @include euiScrollBar;
  width: 100%;
  height: calc(100% - #{$controlBarInitialHeight});
  background-color: $euiColorLightestShade;
  box-sizing: border-box;
  animation-name: showContent;
  animation-duration: $euiAnimSpeedSlow;
  animation-iteration-count: 1;
  animation-timing-function: $euiAnimSlightResistance;
  color: $euiColorDarkestShade;
}

@keyframes openPanelLarge {
  0% {
    // Accounts for the initial height offset from the top
    transform: translateY(calc((#{$controlBarInitialHeight} * 3) * -1));
  }

  100% {
    transform: translateY(-100vh);
  }
}

@keyframes openPanelMedium {
  0% {
    transform: translateY(-$controlBarInitialHeight);
  }

  100% {
    transform: translateY(-50vh);
  }
}

@keyframes openPanelSmall {
  0% {
    transform: translateY(-$controlBarInitialHeight);
  }

  100% {
    transform: translateY(-25vh);
  }
}

@keyframes showContent {
  0% {
    opacity: 0;
  }

  100% {
    opacity: 1;
  }
}

.euiControlBar__buttonIcon {
  min-width: $controlBarInitialHeight;
}

.euiControlBar__button {
  border-radius: .125rem;
  height: $euiSizeXL;
  margin-left: $euiSizeXS;

  &:enabled:hover {
    transform: translateY(0);
    box-shadow: none;
  }

  &:last-child {
    margin-right: $euiSizeXS;
  }

}

.euiControlBar__spacer {
  display: flex;
  flex-grow: 1;
  height: 100%;
}

.euiControlBar__divider {
  height: 100%;
  width: 1px;
  background-color: $controlBarBorderColor;
}

.euiControlBar__euiText {
  padding: 0 $euiSizeS;
  color: $controlBarText;
}

.euiControlBar__tab {
  padding: 0 $euiSize;
  text-align: center;
  box-sizing: border-box;
  height: 100%;
  display: flex;
  align-items: center;
  justify-content: center;
  color: $controlBarText;

  &:hover {
    text-decoration: underline;
    cursor: pointer;
  }

  &.euiControlBar__tab--active {
    background-color: $euiColorLightestShade;
    box-shadow: inset 0 4px 0 makeHighContrastColor($euiColorPrimary, $euiColorLightestShade);
    color: makeHighContrastColor($euiColorPrimary, $euiColorLightestShade);
  }
}

.euiControlBar__euiButton + .euiControlBar__tab--active {
  box-shadow: inset 0 4px 0 makeHighContrastColor($euiColorPrimary, $euiColorLightestShade), -1px 0 0 $controlBarBackground;
}

@each $colorName, $colorValue in $euiButtonTypes {
  .euiControlBar__controls {
    .euiText--#{$colorName} {
      color: makeHighContrastColor($colorValue, $controlBarBackground);
    }

    .euiLink.euiLink--#{$colorName} {
      color: makeHighContrastColor($colorValue, $controlBarBackground);

      &:hover {
        color: tintOrShade($colorValue, 30%, 30%);
      }
    }

    .euiControlBar__button.euiButton--#{$colorName}:enabled {
      color: makeHighContrastColor($colorValue, $controlBarBackground);
      border-color: makeHighContrastColor($colorValue, $controlBarBackground);
      box-shadow: none;
    }

    .euiControlBar__buttonIcon .euiIcon--#{$colorName} {
      color: makeHighContrastColor($colorValue, $controlBarBackground);
    }
  }
}
